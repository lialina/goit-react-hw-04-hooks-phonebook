{"version":3,"sources":["components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","htmlFor","type","onChange","id","pattern","title","required","button","Component","Filter","ContactList","contacts","onDeleteContact","list","map","item","onClick","App","initialContacts","filter","addContact","contact","checkisContactAlreadyPresent","find","presentContact","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","console","log","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1246d9bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Z752\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__aHh74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__uEKlN\",\"item\":\"ContactList_item__1dErc\",\"name\":\"ContactList_name__2oK1h\",\"number\":\"ContactList_number__1VYyn\",\"button\":\"ContactList_button__1M199\"};","import PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit({\n      name: this.state.name,\n      number: this.state.number,\n    });\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <p className={s.name}>{name}</p>\n          <p className={s.number}>{number}</p>\n          <button className={s.button} onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nimport Container from \"components/Container/Container\";\nimport ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport initialContacts from \"contacts.json\";\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    console.log(\"App componentDidMount\");\n\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"Обновилось поле contacts, записываю contacts  в хранилище\");\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"App componentDidUpdate\");\n\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.checkisContactAlreadyPresent(contact);\n  };\n\n  checkisContactAlreadyPresent = (contact) => {\n    if (\n      this.state.contacts.find(\n        (presentContact) => presentContact.name === contact.name\n      )\n    ) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__aod3k\",\"label\":\"ContactForm_label__1osID\",\"button\":\"ContactForm_button__2KNxe\"};"],"sourceRoot":""}